var scene, camera, renderer;
var controls;
var obj;

/*var points = [
    new THREE.Vector3(1.0, 2.0, 2.0),
    new THREE.Vector3(3.0, 1.0, 2.0),
    new THREE.Vector3(3.0, -1.0, 2.0),
    new THREE.Vector3(1.0, -2.0, 2.0),
    new THREE.Vector3(-1.0, -1.0, 2.0),
    new THREE.Vector3(-1.0, 1.0, 2.0),
    new THREE.Vector3(-3.0, 2.0, 0.0),
    new THREE.Vector3(-2.0, 0.0, 1.0),
    new THREE.Vector3(-3.0, -2.0, 0.0),
    new THREE.Vector3(-2.0, -1.0, -3.0),
    new THREE.Vector3(-2.0, 1.0, -3.0)
];
var faces = [
    [0, 1, 2, 3, 4, 5],
    [4, 5, 6, 7, 8],
    [7, 9, 10]
];*/
var points = [
new THREE.Vector3(-48, -35, 4),
new THREE.Vector3(-51, -25, 5),
new THREE.Vector3(-48, -31, 95),
new THREE.Vector3(-48, -31, 95),
new THREE.Vector3(-51, -25, 5),
new THREE.Vector3(-48, -4, 6),
new THREE.Vector3(-48, -4, 45),
new THREE.Vector3(-48, -12, 52),
new THREE.Vector3(-48, -16, 56),
new THREE.Vector3(-48, -16, 73),
new THREE.Vector3(-48, -12, 77),
new THREE.Vector3(-48, -20, 94),
new THREE.Vector3(-48, -20, 94),
new THREE.Vector3(-45, -4, 93),
new THREE.Vector3(-45, -4, 84),
new THREE.Vector3(-48, -12, 77),
new THREE.Vector3(-45, -4, 93),
new THREE.Vector3(-45, -4, 84),
new THREE.Vector3(-46, 0, 84),
new THREE.Vector3(-46, 0, 95),
new THREE.Vector3(-48, -4, 45),
new THREE.Vector3(-51, -2, 45),
new THREE.Vector3(-51, -2, 6),
new THREE.Vector3(-48, -4, 6),
new THREE.Vector3(-51, -2, 45),
new THREE.Vector3(-51, -2, 6),
new THREE.Vector3(-48, 0, 6),
new THREE.Vector3(-48, 0, 45),
new THREE.Vector3(-22, -36, 8),
new THREE.Vector3(-48, -35, 4),
new THREE.Vector3(-48, -31, 95),
new THREE.Vector3(-28, -36, 106),
new THREE.Vector3(-28, -36, 70),
new THREE.Vector3(-28, -42, 65),
new THREE.Vector3(-22, -36, 8),
new THREE.Vector3(-28, -17, 101),
new THREE.Vector3(-28, -36, 106),
new THREE.Vector3(-37, -35, 99),
new THREE.Vector3(-37, -31, 90),
new THREE.Vector3(-31, -30, 90),
new THREE.Vector3(-29, -27, 90),
new THREE.Vector3(-31, -24, 90),
new THREE.Vector3(-37, -23, 90),
new THREE.Vector3(-37, -18, 97),
new THREE.Vector3(-48, -20, 94),
new THREE.Vector3(-48, -31, 95),
new THREE.Vector3(-37, -35, 99),
new THREE.Vector3(-37, -31, 90),
new THREE.Vector3(-42, -30, 90),
new THREE.Vector3(-45, -27, 90),
new THREE.Vector3(-42, -24, 90),
new THREE.Vector3(-37, -23, 90),
new THREE.Vector3(-37, -18, 97),
new THREE.Vector3(-37, -31, 90),
new THREE.Vector3(-42, -30, 90),
new THREE.Vector3(-45, -27, 90),
new THREE.Vector3(-42, -24, 90),
new THREE.Vector3(-37, -23, 90),
new THREE.Vector3(-31, -24, 90),
new THREE.Vector3(-29, -27, 90),
new THREE.Vector3(-31, -30, 90),
new THREE.Vector3(-45, -4, 93),
new THREE.Vector3(-46, 0, 95),
new THREE.Vector3(-28, 0, 102),
new THREE.Vector3(-28, -4, 100),
new THREE.Vector3(-48, -35, 4),
new THREE.Vector3(-51, -25, 5),
new THREE.Vector3(-48, -29, -61),
new THREE.Vector3(-48, -34, -61),
new THREE.Vector3(-48, -35, 0),
new THREE.Vector3(-51, -25, 5),
new THREE.Vector3(-48, -29, -61),
new THREE.Vector3(-48, -29, -73),
new THREE.Vector3(-48, -28, -73),
new THREE.Vector3(-52, -27, -61),
new THREE.Vector3(-52, -27, -61),
new THREE.Vector3(-48, -23, -60),
new THREE.Vector3(-51, -25, 5),
new THREE.Vector3(-52, -27, -61),
new THREE.Vector3(-48, -28, -73),
new THREE.Vector3(-48, -10, -67),
new THREE.Vector3(-52, -10, -57),
new THREE.Vector3(-48, -10, -33),
new THREE.Vector3(-48, -14, -58),
new THREE.Vector3(-52, -10, -57),
new THREE.Vector3(-48, -10, -67),
new THREE.Vector3(-48, -9, -64),
new THREE.Vector3(-48, -9, -56),
new THREE.Vector3(-48, -10, -33),
new THREE.Vector3(-52, -10, -57),
new THREE.Vector3(-52, -10, -57),
new THREE.Vector3(-52, -27, -61),
new THREE.Vector3(-48, -23, -60),
new THREE.Vector3(-48, -14, -58),
new THREE.Vector3(-48, -4, 6),
new THREE.Vector3(-51, -25, 5),
new THREE.Vector3(-48, -23, -60),
new THREE.Vector3(-48, -14, -58),
new THREE.Vector3(-48, -10, -33),
new THREE.Vector3(-48, -9, -56),
new THREE.Vector3(-48, -4, -54),
new THREE.Vector3(-48, -4, 6),
new THREE.Vector3(-51, -2, 6),
new THREE.Vector3(-51, -2, -54),
new THREE.Vector3(-48, -4, -54),
new THREE.Vector3(-48, 0, 6),
new THREE.Vector3(-51, -2, 6),
new THREE.Vector3(-51, -2, -54),
new THREE.Vector3(-48, 0, -54),
new THREE.Vector3(-48, 0, -67),
new THREE.Vector3(-51, -2, -67),
new THREE.Vector3(-51, -2, -54),
new THREE.Vector3(-48, 0, -54),
new THREE.Vector3(-48, -4, -67),
new THREE.Vector3(-51, -2, -67),
new THREE.Vector3(-51, -2, -54),
new THREE.Vector3(-48, -4, -54),
new THREE.Vector3(-48, -34, -61),
new THREE.Vector3(-48, -29, -61),
new THREE.Vector3(-48, -29, -73),
new THREE.Vector3(-48, -28, -73),
new THREE.Vector3(-48, -10, -67),
new THREE.Vector3(-48, -9, -64),
new THREE.Vector3(-48, -9, -56),
new THREE.Vector3(-48, -4, -54),
new THREE.Vector3(-48, -4, -67),
new THREE.Vector3(-48, -12, -74),
new THREE.Vector3(-48, -16, -78),
new THREE.Vector3(-48, -16, -95),
new THREE.Vector3(-46, -12, -99),
new THREE.Vector3(-44, -4, -106),
new THREE.Vector3(-45, -7, -128),
new THREE.Vector3(-48, -12, -140),
new THREE.Vector3(-48, -16, -138),
new THREE.Vector3(-48, -35, -139),
new THREE.Vector3(-48, -33, -134),
new THREE.Vector3(-48, -40, -82),
new THREE.Vector3(-48, -40, -71),
new THREE.Vector3(-41, -56, -17),
new THREE.Vector3(-48, -35, 4),
new THREE.Vector3(-48, -35, 0),
new THREE.Vector3(-41, -54, -20),
new THREE.Vector3(-38, -54, -52),
new THREE.Vector3(-38, -56, -52),
new THREE.Vector3(-36, -52, -73),
new THREE.Vector3(-38, -56, -52),
new THREE.Vector3(-38, -54, -52),
new THREE.Vector3(-36, -52, -61),
new THREE.Vector3(-36, -52, -65),
new THREE.Vector3(-43, -41, -93),
new THREE.Vector3(-41, -40, -71),
new THREE.Vector3(-44, -37, -105),
new THREE.Vector3(-36, -52, -65),
new THREE.Vector3(-36, -52, -61),
new THREE.Vector3(-48, -34, -61),
new THREE.Vector3(-41, -40, -71),
new THREE.Vector3(-45, -40, -82),
new THREE.Vector3(-45, -41, -64),
new THREE.Vector3(-48, -34, -61),
new THREE.Vector3(-41, -40, -71),
new THREE.Vector3(-48, -40, -71),
new THREE.Vector3(-41, -40, -71),
new THREE.Vector3(-48, -40, -71),
new THREE.Vector3(-48, -40, -82),
new THREE.Vector3(-48, -33, -134),
new THREE.Vector3(-44, -37, -105),
new THREE.Vector3(-36, -52, -65),
new THREE.Vector3(-42, -49, -65),
new THREE.Vector3(-43, -41, -93),
new THREE.Vector3(-45, -41, -64),
new THREE.Vector3(-45, -43, -64),
new THREE.Vector3(-43, -41, -93),
new THREE.Vector3(-42, -49, -65),
new THREE.Vector3(-45, -43, -64),
new THREE.Vector3(-43, -41, -93),
new THREE.Vector3(-42, -49, -65),
new THREE.Vector3(-45, -43, -64),
new THREE.Vector3(-45, -41, -64),
new THREE.Vector3(-36, -52, -65),
new THREE.Vector3(48, -35, 4),
new THREE.Vector3(51, -25, 5),
new THREE.Vector3(48, -31, 95),
new THREE.Vector3(48, -31, 95),
new THREE.Vector3(51, -25, 5),
new THREE.Vector3(48, -4, 6),
new THREE.Vector3(48, -4, 45),
new THREE.Vector3(48, -12, 52),
new THREE.Vector3(48, -16, 56),
new THREE.Vector3(48, -16, 73),
new THREE.Vector3(48, -12, 77),
new THREE.Vector3(48, -20, 94),
new THREE.Vector3(48, -20, 94),
new THREE.Vector3(45, -4, 93),
new THREE.Vector3(45, -4, 84),
new THREE.Vector3(48, -12, 77),
new THREE.Vector3(45, -4, 93),
new THREE.Vector3(45, -4, 84),
new THREE.Vector3(46, 0, 84),
new THREE.Vector3(46, 0, 95),
new THREE.Vector3(48, -4, 45),
new THREE.Vector3(51, -2, 45),
new THREE.Vector3(51, -2, 6),
new THREE.Vector3(48, -4, 6),
new THREE.Vector3(51, -2, 45),
new THREE.Vector3(51, -2, 6),
new THREE.Vector3(48, 0, 6),
new THREE.Vector3(48, 0, 45),
new THREE.Vector3(22, -36, 8),
new THREE.Vector3(48, -35, 4),
new THREE.Vector3(48, -31, 95),
new THREE.Vector3(28, -36, 106),
new THREE.Vector3(28, -36, 70),
new THREE.Vector3(28, -42, 65),
new THREE.Vector3(22, -36, 8),
new THREE.Vector3(28, -17, 101),
new THREE.Vector3(28, -36, 106),
new THREE.Vector3(37, -35, 99),
new THREE.Vector3(37, -31, 90),
new THREE.Vector3(31, -30, 90),
new THREE.Vector3(29, -27, 90),
new THREE.Vector3(31, -24, 90),
new THREE.Vector3(37, -23, 90),
new THREE.Vector3(37, -18, 97),
new THREE.Vector3(48, -20, 94),
new THREE.Vector3(48, -31, 95),
new THREE.Vector3(37, -35, 99),
new THREE.Vector3(37, -31, 90),
new THREE.Vector3(42, -30, 90),
new THREE.Vector3(45, -27, 90),
new THREE.Vector3(42, -24, 90),
new THREE.Vector3(37, -23, 90),
new THREE.Vector3(37, -18, 97),
new THREE.Vector3(37, -31, 90),
new THREE.Vector3(42, -30, 90),
new THREE.Vector3(45, -27, 90),
new THREE.Vector3(42, -24, 90),
new THREE.Vector3(37, -23, 90),
new THREE.Vector3(31, -24, 90),
new THREE.Vector3(29, -27, 90),
new THREE.Vector3(31, -30, 90),
new THREE.Vector3(45, -4, 93),
new THREE.Vector3(46, 0, 95),
new THREE.Vector3(28, 0, 102),
new THREE.Vector3(28, -4, 100),
new THREE.Vector3(48, -35, 4),
new THREE.Vector3(51, -25, 5),
new THREE.Vector3(48, -29, -61),
new THREE.Vector3(48, -34, -61),
new THREE.Vector3(48, -35, 0),
new THREE.Vector3(51, -25, 5),
new THREE.Vector3(48, -29, -61),
new THREE.Vector3(48, -29, -73),
new THREE.Vector3(48, -28, -73),
new THREE.Vector3(52, -27, -61),
new THREE.Vector3(52, -27, -61),
new THREE.Vector3(48, -23, -60),
new THREE.Vector3(51, -25, 5),
new THREE.Vector3(52, -27, -61),
new THREE.Vector3(48, -28, -73),
new THREE.Vector3(48, -10, -67),
new THREE.Vector3(52, -10, -57),
new THREE.Vector3(48, -10, -33),
new THREE.Vector3(48, -14, -58),
new THREE.Vector3(52, -10, -57),
new THREE.Vector3(48, -10, -67),
new THREE.Vector3(48, -9, -64),
new THREE.Vector3(48, -9, -56),
new THREE.Vector3(48, -10, -33),
new THREE.Vector3(52, -10, -57),
new THREE.Vector3(52, -10, -57),
new THREE.Vector3(52, -27, -61),
new THREE.Vector3(48, -23, -60),
new THREE.Vector3(48, -14, -58),
new THREE.Vector3(48, -4, 6),
new THREE.Vector3(51, -25, 5),
new THREE.Vector3(48, -23, -60),
new THREE.Vector3(48, -14, -58),
new THREE.Vector3(48, -10, -33),
new THREE.Vector3(48, -9, -56),
new THREE.Vector3(48, -4, -54),
new THREE.Vector3(48, -4, 6),
new THREE.Vector3(51, -2, 6),
new THREE.Vector3(51, -2, -54),
new THREE.Vector3(48, -4, -54),
new THREE.Vector3(48, 0, 6),
new THREE.Vector3(51, -2, 6),
new THREE.Vector3(51, -2, -54),
new THREE.Vector3(48, 0, -54),
new THREE.Vector3(48, 0, -67),
new THREE.Vector3(51, -2, -67),
new THREE.Vector3(51, -2, -54),
new THREE.Vector3(48, 0, -54),
new THREE.Vector3(48, -4, -67),
new THREE.Vector3(51, -2, -67),
new THREE.Vector3(51, -2, -54),
new THREE.Vector3(48, -4, -54),
new THREE.Vector3(48, -34, -61),
new THREE.Vector3(48, -29, -61),
new THREE.Vector3(48, -29, -73),
new THREE.Vector3(48, -28, -73),
new THREE.Vector3(48, -10, -67),
new THREE.Vector3(48, -9, -64),
new THREE.Vector3(48, -9, -56),
new THREE.Vector3(48, -4, -54),
new THREE.Vector3(48, -4, -67),
new THREE.Vector3(48, -12, -74),
new THREE.Vector3(48, -16, -78),
new THREE.Vector3(48, -16, -95),
new THREE.Vector3(46, -12, -99),
new THREE.Vector3(44, -4, -106),
new THREE.Vector3(45, -7, -128),
new THREE.Vector3(48, -12, -140),
new THREE.Vector3(48, -16, -138),
new THREE.Vector3(48, -35, -139),
new THREE.Vector3(48, -33, -134),
new THREE.Vector3(48, -40, -82),
new THREE.Vector3(48, -40, -71),
new THREE.Vector3(41, -56, -17),
new THREE.Vector3(48, -35, 4),
new THREE.Vector3(48, -35, 0),
new THREE.Vector3(41, -54, -20),
new THREE.Vector3(38, -54, -52),
new THREE.Vector3(38, -56, -52),
new THREE.Vector3(36, -52, -73),
new THREE.Vector3(38, -56, -52),
new THREE.Vector3(38, -54, -52),
new THREE.Vector3(36, -52, -61),
new THREE.Vector3(36, -52, -65),
new THREE.Vector3(43, -41, -93),
new THREE.Vector3(41, -40, -71),
new THREE.Vector3(44, -37, -105),
new THREE.Vector3(36, -52, -65),
new THREE.Vector3(36, -52, -61),
new THREE.Vector3(48, -34, -61),
new THREE.Vector3(41, -40, -71),
new THREE.Vector3(45, -40, -82),
new THREE.Vector3(45, -41, -64),
new THREE.Vector3(48, -34, -61),
new THREE.Vector3(41, -40, -71),
new THREE.Vector3(48, -40, -71),
new THREE.Vector3(41, -40, -71),
new THREE.Vector3(48, -40, -71),
new THREE.Vector3(48, -40, -82),
new THREE.Vector3(48, -33, -134),
new THREE.Vector3(44, -37, -105),
new THREE.Vector3(36, -52, -65),
new THREE.Vector3(42, -49, -65),
new THREE.Vector3(43, -41, -93),
new THREE.Vector3(45, -41, -64),
new THREE.Vector3(45, -43, -64),
new THREE.Vector3(43, -41, -93),
new THREE.Vector3(42, -49, -65),
new THREE.Vector3(45, -43, -64),
new THREE.Vector3(43, -41, -93),
new THREE.Vector3(42, -49, -65),
new THREE.Vector3(45, -43, -64),
new THREE.Vector3(45, -41, -64),
new THREE.Vector3(36, -52, -65),
new THREE.Vector3(-28, -17, 101),
new THREE.Vector3(-28, -36, 106),
new THREE.Vector3(-12, -36, 110),
new THREE.Vector3(0, -36, 110),
new THREE.Vector3(0, -34, 102),
new THREE.Vector3(-24, -33, 100),
new THREE.Vector3(-25, -29, 100),
new THREE.Vector3(-24, -22, 100),
new THREE.Vector3(0, -21, 101),
new THREE.Vector3(0, -17, 101),
new THREE.Vector3(28, -17, 101),
new THREE.Vector3(28, -36, 106),
new THREE.Vector3(12, -36, 110),
new THREE.Vector3(0, -36, 110),
new THREE.Vector3(0, -34, 102),
new THREE.Vector3(24, -33, 100),
new THREE.Vector3(25, -29, 100),
new THREE.Vector3(24, -22, 100),
new THREE.Vector3(0, -21, 101),
new THREE.Vector3(0, -17, 101),
new THREE.Vector3(0, -34, 102),
new THREE.Vector3(24, -33, 100),
new THREE.Vector3(25, -29, 100),
new THREE.Vector3(24, -22, 100),
new THREE.Vector3(0, -21, 101),
new THREE.Vector3(-24, -22, 100),
new THREE.Vector3(-25, -29, 100),
new THREE.Vector3(-24, -33, 100),
new THREE.Vector3(-28, -4, 100),
new THREE.Vector3(-28, 0, 102),
new THREE.Vector3(28, 0, 102),
new THREE.Vector3(28, -4, 100),
new THREE.Vector3(-45, -4, 93),
new THREE.Vector3(-48, -20, 94),
new THREE.Vector3(-28, -17, 101),
new THREE.Vector3(-12, -17, 101),
new THREE.Vector3(-12, -4, 100),
new THREE.Vector3(-28, -4, 100),
new THREE.Vector3(45, -4, 93),
new THREE.Vector3(48, -20, 94),
new THREE.Vector3(28, -17, 101),
new THREE.Vector3(12, -17, 101),
new THREE.Vector3(12, -4, 100),
new THREE.Vector3(28, -4, 100),
new THREE.Vector3(12, -17, 101),
new THREE.Vector3(12, -4, 100),
new THREE.Vector3(-12, -4, 100),
new THREE.Vector3(-12, -17, 101),
new THREE.Vector3(-12, -36, 110),
new THREE.Vector3(-28, -36, 106),
new THREE.Vector3(-28, -36, 70),
new THREE.Vector3(-12, -39, 74),
new THREE.Vector3(12, -36, 110),
new THREE.Vector3(28, -36, 106),
new THREE.Vector3(28, -36, 70),
new THREE.Vector3(12, -39, 74),
new THREE.Vector3(12, -36, 110),
new THREE.Vector3(-12, -36, 110),
new THREE.Vector3(-12, -39, 74),
new THREE.Vector3(12, -39, 74),
new THREE.Vector3(28, -36, 70),
new THREE.Vector3(28, -42, 65),
new THREE.Vector3(12, -42, 65),
new THREE.Vector3(12, -39, 74),
new THREE.Vector3(-28, -36, 70),
new THREE.Vector3(-28, -42, 65),
new THREE.Vector3(-12, -42, 65),
new THREE.Vector3(-12, -39, 74),
new THREE.Vector3(12, -39, 74),
new THREE.Vector3(12, -42, 65),
new THREE.Vector3(-12, -42, 65),
new THREE.Vector3(-12, -39, 74),
new THREE.Vector3(22, -36, 8),
new THREE.Vector3(28, -42, 65),
new THREE.Vector3(12, -42, 65),
new THREE.Vector3(12, -36, 8),
new THREE.Vector3(-22, -36, 8),
new THREE.Vector3(-28, -42, 65),
new THREE.Vector3(-12, -42, 65),
new THREE.Vector3(-12, -36, 8),
new THREE.Vector3(-12, -42, 65),
new THREE.Vector3(-12, -36, 8),
new THREE.Vector3(12, -36, 8),
new THREE.Vector3(12, -42, 65),
new THREE.Vector3(-38, -56, -16),
new THREE.Vector3(-45, -35, 4),
new THREE.Vector3(-22, -36, 8),
new THREE.Vector3(22, -36, 8),
new THREE.Vector3(45, -35, 4),
new THREE.Vector3(38, -56, -16),
new THREE.Vector3(20, -56, -12),
new THREE.Vector3(-20, -56, -12),
new THREE.Vector3(-36, -52, -61),
new THREE.Vector3(-48, -34, -61),
new THREE.Vector3(-48, -35, 0),
new THREE.Vector3(-41, -54, -20),
new THREE.Vector3(-38, -54, -52),
new THREE.Vector3(36, -52, -61),
new THREE.Vector3(48, -34, -61),
new THREE.Vector3(48, -35, 0),
new THREE.Vector3(41, -54, -20),
new THREE.Vector3(38, -54, -52),
new THREE.Vector3(-36, -40, -99),
new THREE.Vector3(-33, -52, -74),
new THREE.Vector3(-20, -52, -76),
new THREE.Vector3(20, -52, -76),
new THREE.Vector3(33, -52, -74),
new THREE.Vector3(36, -40, -99),
new THREE.Vector3(20, -40, -102),
new THREE.Vector3(-20, -40, -102),
new THREE.Vector3(-38, -56, -16),
new THREE.Vector3(-41, -56, -17),
new THREE.Vector3(-48, -35, 4),
new THREE.Vector3(-45, -35, 4),
new THREE.Vector3(38, -56, -16),
new THREE.Vector3(41, -56, -17),
new THREE.Vector3(48, -35, 4),
new THREE.Vector3(45, -35, 4),
new THREE.Vector3(-36, -40, -99),
new THREE.Vector3(-43, -40, -97),
new THREE.Vector3(-36, -52, -73),
new THREE.Vector3(-33, -52, -74),
new THREE.Vector3(36, -40, -99),
new THREE.Vector3(43, -40, -97),
new THREE.Vector3(36, -52, -73),
new THREE.Vector3(33, -52, -74),
new THREE.Vector3(-20, -56, -12),
new THREE.Vector3(-41, -56, -17),
new THREE.Vector3(-38, -56, -52),
new THREE.Vector3(-36, -52, -73),
new THREE.Vector3(-20, -52, -76),
new THREE.Vector3(-12, -52, -76),
new THREE.Vector3(-12, -56, -12),
new THREE.Vector3(20, -56, -12),
new THREE.Vector3(41, -56, -17),
new THREE.Vector3(38, -56, -52),
new THREE.Vector3(36, -52, -73),
new THREE.Vector3(20, -52, -76),
new THREE.Vector3(12, -52, -76),
new THREE.Vector3(12, -56, -12),
new THREE.Vector3(12, -56, -12),
new THREE.Vector3(-12, -56, -12),
new THREE.Vector3(-12, -56, -33),
new THREE.Vector3(12, -56, -33),
new THREE.Vector3(12, -59, -35),
new THREE.Vector3(-12, -59, -35),
new THREE.Vector3(-12, -56, -33),
new THREE.Vector3(12, -56, -33),
new THREE.Vector3(12, -59, -35),
new THREE.Vector3(-12, -59, -35),
new THREE.Vector3(-12, -58, -57),
new THREE.Vector3(12, -58, -57),
new THREE.Vector3(12, -52, -76),
new THREE.Vector3(-12, -52, -76),
new THREE.Vector3(-12, -58, -57),
new THREE.Vector3(12, -58, -57),
new THREE.Vector3(-12, -56, -33),
new THREE.Vector3(-12, -59, -35),
new THREE.Vector3(-12, -58, -57),
new THREE.Vector3(-12, -52, -76),
new THREE.Vector3(12, -56, -33),
new THREE.Vector3(12, -59, -35),
new THREE.Vector3(12, -58, -57),
new THREE.Vector3(12, -52, -76),
new THREE.Vector3(44, -37, -105),
new THREE.Vector3(43, -40, -97),
new THREE.Vector3(20, -40, -102),
new THREE.Vector3(12, -40, -102),
new THREE.Vector3(12, -33, -134),
new THREE.Vector3(48, -33, -134),
new THREE.Vector3(-44, -37, -105),
new THREE.Vector3(-43, -40, -97),
new THREE.Vector3(-20, -40, -102),
new THREE.Vector3(-12, -40, -102),
new THREE.Vector3(-12, -33, -134),
new THREE.Vector3(-48, -33, -134),
new THREE.Vector3(-12, -40, -102),
new THREE.Vector3(-12, -33, -134),
new THREE.Vector3(12, -33, -134),
new THREE.Vector3(12, -40, -102),
new THREE.Vector3(-48, -33, -134),
new THREE.Vector3(-48, -35, -139),
new THREE.Vector3(-12, -35, -139),
new THREE.Vector3(-12, -33, -134),
new THREE.Vector3(48, -33, -134),
new THREE.Vector3(48, -35, -139),
new THREE.Vector3(12, -35, -139),
new THREE.Vector3(12, -33, -134),
new THREE.Vector3(-12, -35, -139),
new THREE.Vector3(-12, -33, -134),
new THREE.Vector3(12, -33, -134),
new THREE.Vector3(12, -35, -139),
new THREE.Vector3(48, -35, -139),
new THREE.Vector3(48, -27, -138),
new THREE.Vector3(12, -27, -138),
new THREE.Vector3(12, -35, -139),
new THREE.Vector3(48, -16, -138),
new THREE.Vector3(48, -23, -138),
new THREE.Vector3(12, -23, -138),
new THREE.Vector3(12, -16, -138),
new THREE.Vector3(48, -16, -138),
new THREE.Vector3(48, -12, -140),
new THREE.Vector3(12, -12, -140),
new THREE.Vector3(12, -16, -138),
new THREE.Vector3(48, -27, -138),
new THREE.Vector3(48, -23, -138),
new THREE.Vector3(12, -23, -138),
new THREE.Vector3(12, -27, -138),
new THREE.Vector3(-48, -35, -139),
new THREE.Vector3(-48, -27, -138),
new THREE.Vector3(-12, -27, -138),
new THREE.Vector3(-12, -35, -139),
new THREE.Vector3(-48, -16, -138),
new THREE.Vector3(-48, -23, -138),
new THREE.Vector3(-12, -23, -138),
new THREE.Vector3(-12, -16, -138),
new THREE.Vector3(-48, -16, -138),
new THREE.Vector3(-48, -12, -140),
new THREE.Vector3(-12, -12, -140),
new THREE.Vector3(-12, -16, -138),
new THREE.Vector3(-48, -27, -138),
new THREE.Vector3(-48, -23, -138),
new THREE.Vector3(-12, -23, -138),
new THREE.Vector3(-12, -27, -138),
new THREE.Vector3(-12, -35, -139),
new THREE.Vector3(-12, -12, -140),
new THREE.Vector3(12, -12, -140),
new THREE.Vector3(12, -35, -139),
new THREE.Vector3(-48, -12, -140),
new THREE.Vector3(-12, -12, -140),
new THREE.Vector3(-12, -7, -128),
new THREE.Vector3(-48, -7, -128),
new THREE.Vector3(48, -12, -140),
new THREE.Vector3(12, -12, -140),
new THREE.Vector3(12, -7, -128),
new THREE.Vector3(48, -7, -128),
new THREE.Vector3(-12, -12, -140),
new THREE.Vector3(12, -12, -140),
new THREE.Vector3(12, -7, -128),
new THREE.Vector3(-12, -7, -128),
new THREE.Vector3(48, -7, -128),
new THREE.Vector3(44, -4, -106),
new THREE.Vector3(-44, -4, -106),
new THREE.Vector3(-48, -7, -128),
new THREE.Vector3(48, -4, -67),
new THREE.Vector3(44, -4, -106),
new THREE.Vector3(-44, -4, -106),
new THREE.Vector3(-48, -4, -67),
new THREE.Vector3(48, -4, -67),
new THREE.Vector3(48, -4, 6),
new THREE.Vector3(-48, -4, 6),
new THREE.Vector3(-48, -4, -67),
new THREE.Vector3(48, -4, 45),
new THREE.Vector3(48, -4, 6),
new THREE.Vector3(-48, -4, 6),
new THREE.Vector3(-48, -4, 45),
new THREE.Vector3(48, -4, 45),
new THREE.Vector3(45, -4, 84),
new THREE.Vector3(-45, -4, 84),
new THREE.Vector3(-48, -4, 45),
new THREE.Vector3(45, -4, 93),
new THREE.Vector3(45, -4, 84),
new THREE.Vector3(-45, -4, 84),
new THREE.Vector3(-45, -4, 93),
new THREE.Vector3(-28, -4, 100),
new THREE.Vector3(28, -4, 100),
];
var faces = [
[0,1,2], [3,4,5,6,7,8,9,10,11], [12,13,14,15], [16,17,18,19], [20,21,22,23], [24,25,26,27], [28,29,30,31], [32,33,34], [35,36,37,38,39,40,41,42,43], [44,45,46,47,48,49,50,51,52], [53,54,55,56,57,58,59,60], [61,62,63,64], [65,66,67,68,69], [70,71,72,73,74], [75,76,77], [78,79,80,81], [82,83,84], [85,86,87,88,89], [90,91,92,93], [94,95,96,97,98,99,100], [101,102,103,104], [105,106,107,108], [109,110,111,112], [113,114,115,116], [117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137], [138,139,140,141,142,143], [144,145,146,147,148,149,150,151], [152,153,154,155,156,157], [158,159,160], [161,162,163,164,165], [166,167,168], [169,170,171], [172,173,174], [175,176,177,178], [179,180,181], [182,183,184,185,186,187,188,189,190], [191,192,193,194], [195,196,197,198], [199,200,201,202], [203,204,205,206], [207,208,209,210], [211,212,213], [214,215,216,217,218,219,220,221,222], [223,224,225,226,227,228,229,230,231], [232,233,234,235,236,237,238,239], [240,241,242,243], [244,245,246,247,248], [249,250,251,252,253], [254,255,256], [257,258,259,260], [261,262,263], [264,265,266,267,268], [269,270,271,272], [273,274,275,276,277,278,279], [280,281,282,283], [284,285,286,287], [288,289,290,291], [292,293,294,295], [296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316], [317,318,319,320,321,322], [323,324,325,326,327,328,329,330], [331,332,333,334,335,336], [337,338,339], [340,341,342,343,344], [345,346,347], [348,349,350], [351,352,353], [354,355,356,357], [358,359,360,361,362,363,364,365,366,367], [368,369,370,371,372,373,374,375,376,377], [378,379,380,381,382,383,384,385], [386,387,388,389], [390,391,392,393,394,395], [396,397,398,399,400,401], [402,403,404,405], [406,407,408,409], [410,411,412,413], [414,415,416,417], [418,419,420,421], [422,423,424,425], [426,427,428,429], [430,431,432,433], [434,435,436,437], [438,439,440,441], [442,443,444,445,446,447,448,449], [450,451,452,453,454], [455,456,457,458,459], [460,461,462,463,464,465,466,467], [468,469,470,471], [472,473,474,475], [476,477,478,479], [480,481,482,483], [484,485,486,487,488,489,490], [491,492,493,494,495,496,497], [498,499,500,501], [502,503,504,505], [506,507,508,509], [510,511,512,513], [514,515,516,517], [518,519,520,521], [522,523,524,525,526,527], [528,529,530,531,532,533], [534,535,536,537], [538,539,540,541], [542,543,544,545], [546,547,548,549], [550,551,552,553], [554,555,556,557], [558,559,560,561], [562,563,564,565], [566,567,568,569], [570,571,572,573], [574,575,576,577], [578,579,580,581], [582,583,584,585], [586,587,588,589], [590,591,592,593], [594,595,596,597], [598,599,600,601], [602,603,604,605], [606,607,608,609], [610,611,612,613], [614,615,616,617], [618,619,620,621,622,623],];

var triangulateKFacesWithShapes = (function () {
    var _ctr = new THREE.Vector3();
    
    var _plane = new THREE.Plane();
    var _q = new THREE.Quaternion();
    var _y = new THREE.Vector3();
    var _x = new THREE.Vector3();
    
    var X = new THREE.Vector3(1.0, 0.0, 0.0);
    var Y = new THREE.Vector3(0.0, 1.0, 0.0);
    var Z = new THREE.Vector3(0.0, 0.0, 1.0);
    
    var _tmp = new THREE.Vector3();
    
    var _basis = new THREE.Matrix4();
    
    return function (points, faces) {

        var object = new THREE.Object3D();
        /*var material = new THREE.MeshBasicMaterial({
            color: new THREE.Color(0xffffff),
            side: THREE.DoubleSide,
            wireframe: true
        });*/
        var material = new THREE.MeshPhongMaterial({
            color: new THREE.Color(0x4785db),
            side: THREE.DoubleSide,
        });

        for (var f = 0, len = faces.length; f < len; f++) {
            var face = faces[f];

            // compute centroid
            _ctr.setScalar(0.0);
            for (var i = 0, l = face.length; i < l; i++) {
                _ctr.add(points[face[i]]);
            }
            _ctr.multiplyScalar(1.0 / l);

            // compute face normal
            _plane.setFromCoplanarPoints(_ctr, points[face[0]], points[face[1]]);
            var _z = _plane.normal;

            // compute basis
            _q.setFromUnitVectors(Z, _z);
            _x.copy(X).applyQuaternion(_q);
            _y.crossVectors(_x, _z);
            _y.normalize();
            _basis.makeBasis(_x, _y, _z);
            _basis.setPosition(_ctr);

            // project the 3D points on the 2D plane
            var projPoints = [];
            for (i = 0, l = face.length; i < l; i++) {
                _tmp.subVectors(points[face[i]], _ctr);
                projPoints.push(new THREE.Vector2(_tmp.dot(_x), _tmp.dot(_y)));
            }

            // create the geometry (Three.js triangulation with ShapeBufferGeometry)
            var shape = new THREE.Shape(projPoints);
            var geometry = new THREE.ShapeBufferGeometry(shape);

            // transform geometry back to the initial coordinate system
            geometry.applyMatrix4(_basis);

            // add the face to the object
            object.add(new THREE.Mesh(geometry, material));
        }
				object.applyMatrix4(new THREE.Matrix4().makeScale(1, -1, 1));
        return object;
    };
})();

init();
animate();

function init() {
    scene = new THREE.Scene();
    scene.background = new THREE.Color(0xcdc8c8);

    //camera = new THREE.PerspectiveCamera(75, 4 / 3, 0.1, 100.0);
    camera = new THREE.PerspectiveCamera(75, 4 / 3, 1, 1000.0);

    camera.position.z =200;
    camera.position.y =70;
    camera.lookAt(new THREE.Vector3(0,0,0));

    renderer = new THREE.WebGLRenderer({alpha: true, antialias: true});

    controls = new THREE.OrbitControls(camera, renderer.domElement);

    obj = triangulateKFacesWithShapes(points, faces);
    scene.add(obj);

    const llight = new THREE.DirectionalLight( 0xffffff, 1 );
    llight.target = obj;
  	llight.position.set( -110, -100, -110 );
    llight.castShadow = true;
		scene.add( llight );
    const helper = new THREE.DirectionalLightHelper( llight, 5 );
		scene.add( helper );
    
    window.addEventListener('resize', onWindowResize, false);
    onWindowResize();

    document.body.appendChild(renderer.domElement);
}

function onWindowResize() {
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight);
}

function animate(time) {
    controls.update();
    
    //obj.rotation.x += 0.01;
    obj.rotation.y += 0.01;

    renderer.render(scene, camera);
    requestAnimationFrame(animate);
}